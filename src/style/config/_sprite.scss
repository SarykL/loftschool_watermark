/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-down-hover-name: 'arrow-down-hover';
$arrow-down-hover-x: 241px;
$arrow-down-hover-y: 0px;
$arrow-down-hover-offset-x: -241px;
$arrow-down-hover-offset-y: 0px;
$arrow-down-hover-width: 13px;
$arrow-down-hover-height: 8px;
$arrow-down-hover-total-width: 254px;
$arrow-down-hover-total-height: 230px;
$arrow-down-hover-image: '../img/sprites/sprite.png';
$arrow-down-hover: (241px, 0px, -241px, 0px, 13px, 8px, 254px, 230px, '../img/sprites/sprite.png', 'arrow-down-hover', );
$arrow-down-name: 'arrow-down';
$arrow-down-x: 202px;
$arrow-down-y: 24px;
$arrow-down-offset-x: -202px;
$arrow-down-offset-y: -24px;
$arrow-down-width: 13px;
$arrow-down-height: 8px;
$arrow-down-total-width: 254px;
$arrow-down-total-height: 230px;
$arrow-down-image: '../img/sprites/sprite.png';
$arrow-down: (202px, 24px, -202px, -24px, 13px, 8px, 254px, 230px, '../img/sprites/sprite.png', 'arrow-down', );
$arrow-up-hover-name: 'arrow-up-hover';
$arrow-up-hover-x: 228px;
$arrow-up-hover-y: 8px;
$arrow-up-hover-offset-x: -228px;
$arrow-up-hover-offset-y: -8px;
$arrow-up-hover-width: 13px;
$arrow-up-hover-height: 8px;
$arrow-up-hover-total-width: 254px;
$arrow-up-hover-total-height: 230px;
$arrow-up-hover-image: '../img/sprites/sprite.png';
$arrow-up-hover: (228px, 8px, -228px, -8px, 13px, 8px, 254px, 230px, '../img/sprites/sprite.png', 'arrow-up-hover', );
$arrow-up-name: 'arrow-up';
$arrow-up-x: 215px;
$arrow-up-y: 16px;
$arrow-up-offset-x: -215px;
$arrow-up-offset-y: -16px;
$arrow-up-width: 13px;
$arrow-up-height: 8px;
$arrow-up-total-width: 254px;
$arrow-up-total-height: 230px;
$arrow-up-image: '../img/sprites/sprite.png';
$arrow-up: (215px, 16px, -215px, -16px, 13px, 8px, 254px, 230px, '../img/sprites/sprite.png', 'arrow-up', );
$fb-h-name: 'fb-h';
$fb-h-x: 187px;
$fb-h-y: 32px;
$fb-h-offset-x: -187px;
$fb-h-offset-y: -32px;
$fb-h-width: 15px;
$fb-h-height: 27px;
$fb-h-total-width: 254px;
$fb-h-total-height: 230px;
$fb-h-image: '../img/sprites/sprite.png';
$fb-h: (187px, 32px, -187px, -32px, 15px, 27px, 254px, 230px, '../img/sprites/sprite.png', 'fb-h', );
$fb-name: 'fb';
$fb-x: 172px;
$fb-y: 59px;
$fb-offset-x: -172px;
$fb-offset-y: -59px;
$fb-width: 15px;
$fb-height: 27px;
$fb-total-width: 254px;
$fb-total-height: 230px;
$fb-image: '../img/sprites/sprite.png';
$fb: (172px, 59px, -172px, -59px, 15px, 27px, 254px, 230px, '../img/sprites/sprite.png', 'fb', );
$like-h-name: 'like-h';
$like-h-x: 0px;
$like-h-y: 198px;
$like-h-offset-x: 0px;
$like-h-offset-y: -198px;
$like-h-width: 26px;
$like-h-height: 32px;
$like-h-total-width: 254px;
$like-h-total-height: 230px;
$like-h-image: '../img/sprites/sprite.png';
$like-h: (0px, 198px, 0px, -198px, 26px, 32px, 254px, 230px, '../img/sprites/sprite.png', 'like-h', );
$like-name: 'like';
$like-x: 26px;
$like-y: 166px;
$like-offset-x: -26px;
$like-offset-y: -166px;
$like-width: 26px;
$like-height: 32px;
$like-total-width: 254px;
$like-total-height: 230px;
$like-image: '../img/sprites/sprite.png';
$like: (26px, 166px, -26px, -166px, 26px, 32px, 254px, 230px, '../img/sprites/sprite.png', 'like', );
$tw-h-name: 'tw-h';
$tw-h-x: 144px;
$tw-h-y: 86px;
$tw-h-offset-x: -144px;
$tw-h-offset-y: -86px;
$tw-h-width: 28px;
$tw-h-height: 22px;
$tw-h-total-width: 254px;
$tw-h-total-height: 230px;
$tw-h-image: '../img/sprites/sprite.png';
$tw-h: (144px, 86px, -144px, -86px, 28px, 22px, 254px, 230px, '../img/sprites/sprite.png', 'tw-h', );
$tw-name: 'tw';
$tw-x: 116px;
$tw-y: 108px;
$tw-offset-x: -116px;
$tw-offset-y: -108px;
$tw-width: 28px;
$tw-height: 22px;
$tw-total-width: 254px;
$tw-total-height: 230px;
$tw-image: '../img/sprites/sprite.png';
$tw: (116px, 108px, -116px, -108px, 28px, 22px, 254px, 230px, '../img/sprites/sprite.png', 'tw', );
$vk-h-name: 'vk-h';
$vk-h-x: 52px;
$vk-h-y: 148px;
$vk-h-offset-x: -52px;
$vk-h-offset-y: -148px;
$vk-h-width: 32px;
$vk-h-height: 18px;
$vk-h-total-width: 254px;
$vk-h-total-height: 230px;
$vk-h-image: '../img/sprites/sprite.png';
$vk-h: (52px, 148px, -52px, -148px, 32px, 18px, 254px, 230px, '../img/sprites/sprite.png', 'vk-h', );
$vk-name: 'vk';
$vk-x: 84px;
$vk-y: 130px;
$vk-offset-x: -84px;
$vk-offset-y: -130px;
$vk-width: 32px;
$vk-height: 18px;
$vk-total-width: 254px;
$vk-total-height: 230px;
$vk-image: '../img/sprites/sprite.png';
$vk: (84px, 130px, -84px, -130px, 32px, 18px, 254px, 230px, '../img/sprites/sprite.png', 'vk', );
$spritesheet-width: 254px;
$spritesheet-height: 230px;
$spritesheet-image: '../img/sprites/sprite.png';
$spritesheet-sprites: ($arrow-down-hover, $arrow-down, $arrow-up-hover, $arrow-up, $fb-h, $fb, $like-h, $like, $tw-h, $tw, $vk-h, $vk, );
$spritesheet: (254px, 230px, '../img/sprites/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Here are example usages in HTML:

`display: block` sprite:
<div class="icon-home"></div>

`display: inline-block` sprite:
<img class="icon-home" />
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
